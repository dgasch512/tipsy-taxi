{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { REQUEST_RIDE, REMOVE_REQUEST, ADD_ARTICLE, REMOVE_ARTICLE, PROFILE, REQUEST_LOCATION_PENDING, REQUEST_LOCATION_SUCCESS, REQUEST_LOCATION_FAILED } from './constants.js';\n\nconst user = (state = [], action) => {\n  switch (action.type) {\n    case PROFILE:\n      return state = action.value;\n\n    default:\n      return state;\n  }\n};\n\nconst rides = (state = [], action) => {\n  switch (action.type) {\n    case REQUEST_RIDE:\n      return [...state, action.value];\n\n    case REMOVE_REQUEST:\n      const thisRide = [...state];\n      thisRide.splice(action.payload, 1);\n      return {\n        rides: [...state.rides, thisRide]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst stories = (state = [], action) => {\n  switch (action.type) {\n    case ADD_ARTICLE:\n      return [...state, action.value];\n\n    case REMOVE_ARTICLE:\n      const stories = [...state];\n      stories.splice(action.value, 1);\n      return stories;\n\n    default:\n      return state;\n  }\n};\n\nconst requestLocation = (state = [], action) => {\n  switch (action.type) {\n    case REQUEST_LOCATION_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case REQUEST_LOCATION_SUCCESS:\n      return Object.assign({}, state, {\n        location: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_LOCATION_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  rides,\n  stories,\n  user,\n  requestLocation\n});","map":{"version":3,"sources":["/Users/gaschdammit/Documents/devFolder/final/tipsy-taxi/tipsy-taxi/src/redux/reducers.js"],"names":["combineReducers","REQUEST_RIDE","REMOVE_REQUEST","ADD_ARTICLE","REMOVE_ARTICLE","PROFILE","REQUEST_LOCATION_PENDING","REQUEST_LOCATION_SUCCESS","REQUEST_LOCATION_FAILED","user","state","action","type","value","rides","thisRide","splice","payload","stories","requestLocation","Object","assign","isPending","location","error"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,OALF,EAMEC,wBANF,EAOEC,wBAPF,EAQEC,uBARF,QASU,gBATV;;AAWG,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAyB;AACrC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,OAAL;AACI,aAAOK,KAAK,GAAGC,MAAM,CAACE,KAAtB;;AACJ;AACI,aAAOH,KAAP;AAJR;AAMH,CAPE;;AASA,MAAMI,KAAK,GAAG,CAACJ,KAAK,GAAE,EAAR,EAAYC,MAAZ,KAAuB;AACnC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKX,YAAL;AACE,aAAO,CAAC,GAAGS,KAAJ,EAAWC,MAAM,CAACE,KAAlB,CAAP;;AACD,SAAKX,cAAL;AACE,YAAMa,QAAQ,GAAG,CAAE,GAAGL,KAAL,CAAjB;AACAK,MAAAA,QAAQ,CAACC,MAAT,CAAgBL,MAAM,CAACM,OAAvB,EAAgC,CAAhC;AACA,aAAO;AAACH,QAAAA,KAAK,EAAE,CAAC,GAAGJ,KAAK,CAACI,KAAV,EAAiBC,QAAjB;AAAR,OAAP;;AACF;AACE,aAAOL,KAAP;AARL;AAUD,CAXD;;AAaA,MAAMQ,OAAO,GAAG,CAACR,KAAK,GAAE,EAAR,EAAYC,MAAZ,KAAuB;AACtC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKT,WAAL;AACE,aAAO,CAAC,GAAGO,KAAJ,EAAWC,MAAM,CAACE,KAAlB,CAAP;;AACD,SAAKT,cAAL;AACE,YAAMc,OAAO,GAAG,CAAE,GAAGR,KAAL,CAAhB;AACAQ,MAAAA,OAAO,CAACF,MAAR,CAAeL,MAAM,CAACE,KAAtB,EAA6B,CAA7B;AACA,aAAOK,OAAP;;AACF;AACE,aAAOR,KAAP;AARL;AAUD,CAXA;;AAaD,MAAMS,eAAe,GAAG,CAACT,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAsB;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKN,wBAAL;AACE,aAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyB;AAAEY,QAAAA,SAAS,EAAE;AAAb,OAAzB,CAAP;;AACF,SAAKf,wBAAL;AACE,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyB;AAAEa,QAAAA,QAAQ,EAAEZ,MAAM,CAACM,OAAnB;AAA4BK,QAAAA,SAAS,EAAE;AAAvC,OAAzB,CAAP;;AACF,SAAKd,uBAAL;AACE,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyB;AAAEc,QAAAA,KAAK,EAAEb,MAAM,CAACM,OAAhB;AAAyBK,QAAAA,SAAS,EAAE;AAApC,OAAzB,CAAP;;AACF;AACE,aAAOZ,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAeV,eAAe,CAAC;AAAEc,EAAAA,KAAF;AAASI,EAAAA,OAAT;AAAkBT,EAAAA,IAAlB;AAAwBU,EAAAA;AAAxB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport { \n  REQUEST_RIDE,\n  REMOVE_REQUEST,\n  ADD_ARTICLE,\n  REMOVE_ARTICLE,\n  PROFILE,\n  REQUEST_LOCATION_PENDING,\n  REQUEST_LOCATION_SUCCESS,\n  REQUEST_LOCATION_FAILED\n   } from './constants.js';\n\n   const user = (state = [], action ) => {\n    switch(action.type) {\n        case PROFILE:\n            return state = action.value;\n        default:\n            return state\n    }\n}\n\n   const rides = (state= [], action) => {\n     switch(action.type) {\n       case REQUEST_RIDE:\n         return [...state, action.value]\n        case REMOVE_REQUEST:\n          const thisRide = [ ...state ]\n          thisRide.splice(action.payload, 1)\n          return {rides: [...state.rides, thisRide]}\n        default: \n          return state\n     }\n   }\n\n   const stories = (state= [], action) => {\n    switch(action.type) {\n      case ADD_ARTICLE:\n        return [...state, action.value]\n       case REMOVE_ARTICLE:\n         const stories = [ ...state ]\n         stories.splice(action.value, 1)\n         return stories\n       default: \n         return state\n    }\n  }\n\n  const requestLocation = (state=[], action) => {\n    switch(action.type) {\n      case REQUEST_LOCATION_PENDING:\n        return Object.assign({}, state, { isPending: true });\n      case REQUEST_LOCATION_SUCCESS:\n        return Object.assign({}, state, { location: action.payload, isPending: false });\n      case REQUEST_LOCATION_FAILED:\n        return Object.assign({}, state, { error: action.payload, isPending: false });\n      default: \n        return state;\n    }\n  }\n\n  export default combineReducers({ rides, stories, user, requestLocation });"]},"metadata":{},"sourceType":"module"}